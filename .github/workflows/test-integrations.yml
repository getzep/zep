name: Test Integration Packages

on:
  pull_request:
    paths:
      - 'integrations/python/**'
  push:
    branches: [main]
    paths:
      - 'integrations/python/**'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.changes.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            autogen:
              - 'integrations/python/zep_autogen/**'

  test:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.packages != '[]'
    strategy:
      matrix:
        package: ${{ fromJSON(needs.detect-changes.outputs.packages) }}
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        working-directory: integrations/python/zep_${{ matrix.package }}
        run: uv sync --extra dev

      - name: Run linting
        working-directory: integrations/python/zep_${{ matrix.package }}
        run: |
          uv run ruff check .
          uv run ruff format --check .

      - name: Run type checking
        working-directory: integrations/python/zep_${{ matrix.package }}
        run: uv run mypy src/

      - name: Run tests
        working-directory: integrations/python/zep_${{ matrix.package }}
        run: uv run pytest tests/ -v --cov=zep_${{ matrix.package }} --cov-report=xml

      - name: Upload coverage
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v4
        with:
          file: integrations/python/zep_${{ matrix.package }}/coverage.xml
          flags: ${{ matrix.package }}
          name: ${{ matrix.package }}-coverage